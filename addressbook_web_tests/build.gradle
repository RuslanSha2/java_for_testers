plugins {
    id 'java'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenLocal()
    maven {
        url "http://nexus.gazprom-neft.local:8080/repository/maven2-maven-external-dso/"
        allowInsecureProtocol = true
    }
    maven {
        url "http://nexus.gazprom-neft.local:8080/repository/maven2-gradle-external-dso/"
        allowInsecureProtocol = true
    }
    maven {
        url "http://nexus.gazprom-neft.local:8080/repository/maven2-wso2-public-external-dso/"
        allowInsecureProtocol = true
    }
    maven {
        url "http://nexus.gazprom-neft.local:8080/repository/maven2-whitelist-dso/"
        allowInsecureProtocol = true
    }
    maven {
        url "http://nexus.gazprom-neft.local:8080/repository/maven2-sbt-external-dso/"
        allowInsecureProtocol = true
    }
    maven {
        url "http://nexus.gazprom-neft.local:8080/repository/go-golang-external-dso/"
        allowInsecureProtocol = true
    }
}

def allureVersion = '2.25.0'
def aspectJVersion = '1.9.21'

configurations {
    agent {
        canBeResolved = true
        canBeConsumed = true
    }
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.seleniumhq.selenium:selenium-java:4.16.1'
    testImplementation 'com.titusfortner:selenium-logger:2.4.0'
    implementation 'org.jcommander:jcommander:1.83'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.16.1'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.16.1'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.16.1'
    implementation 'com.mysql:mysql-connector-j:8.3.0'
    implementation 'org.hibernate.orm:hibernate-core:6.3.0.CR1'

    agent "org.aspectj:aspectjweaver:$aspectJVersion"

    testImplementation platform("io.qameta.allure:allure-bom:$allureVersion")
    testImplementation "io.qameta.allure:allure-junit5"
}

test {
    useJUnitPlatform()
    if (project.hasProperty("browser")) {
        systemProperty("browser", project.property("browser"))
    }
    if (project.hasProperty("target")) {
        systemProperty("target", project.property("target"))
    }
    jvmArgs = [ "-javaagent:${configurations.agent.singleFile}" ]
}